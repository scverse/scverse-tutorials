[build-system]
build-backend = "hatchling.build"
requires = [ "hatchling" ]

[project]
name = "scverse-tutorials"
version = "0.0.1"
description = "A very interesting piece of code"
readme = "README.md"
license = { file = "LICENSE" }
maintainers = [
  { name = "scverse team", email = "core-team@scverse.org" },
]
authors = [
  { name = "scverse team" },
]
requires-python = ">=3.10"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
docs = [
  "sphinx>=7",
  "sphinx-book-theme>=1.1.0",
  "sphinx-issues>=5.0.1",
  "myst-nb>=1.1.0",
  "sphinxcontrib-bibtex>=1.0.0",
  "sphinx-autodoc-typehints",
  "sphinxext-opengraph",
  # For notebooks
  "ipykernel",
  "ipython",
  "sphinx-copybutton",
]

[tool.hatch.envs.default]
installer = "uv"
features = [ "dev" ]

[tool.hatch.envs.registry]
features = [ "registry" ]
[tool.hatch.envs.registry.scripts]
validate = "python tutorial-registry/validate.py {args}"

[tool.hatch.envs.docs]
features = [ "docs" ]
extra-dependencies = [
  "setuptools", # undeclared dependency in pybtex
  # fix from here: https://github.com/executablebooks/MyST-NB/pull/597
  "myst-nb @ git+https://github.com/flying-sheep/MyST-NB.git@eval-metadata",
]
[tool.hatch.envs.docs.scripts]
build = "sphinx-build -M html docs docs/_build {args}"
open = "python3 -m webbrowser -t docs/_build/html/index.html"
clean = "git clean -fdX -- {args:docs}"

[tool.hatch.build.targets.wheel]
bypass-selection = true # This is not a package

[tool.ruff]
line-length = 120
src = [ "src" ]
extend-include = [ "*.ipynb" ]

format.docstring-code-format = true

lint.select = [
  "B",      # flake8-bugbear
  "BLE",    # flake8-blind-except
  "C4",     # flake8-comprehensions
  "D",      # pydocstyle
  "E",      # Error detected by Pycodestyle
  "F",      # Errors detected by Pyflakes
  "I",      # isort
  "RUF100", # Report unused noqa directives
  "TID",    # flake8-tidy-imports
  "UP",     # pyupgrade
  "W",      # Warning detected by Pycodestyle
]
lint.ignore = [
  "B008", # Errors from function calls in argument defaults. These are fine when the result is immutable.
  "D100", # Missing docstring in public module
  "D104", # Missing docstring in public package
  "D105", # __magic__ methods are often self-explanatory, allow missing docstrings
  "D107", # Missing docstring in __init__
  # Disable one in each pair of mutually incompatible rules
  "D203", # We don’t want a blank line before a class docstring
  "D213", # <> We want docstrings to start immediately after the opening triple quote
  "D400", # first line should end with a period [Bug: doesn’t work with single-line docstrings]
  "D401", # First line should be in imperative mood; try rephrasing
  "E501", # line too long -> we accept long comment lines; formatter gets rid of long code lines
  "E731", # Do not assign a lambda expression, use a def -> lambda expression assignments are convenient
  "E741", # allow I, O, l as variable names -> I is the identity matrix
]
lint.per-file-ignores."*/__init__.py" = [ "F401" ]
lint.per-file-ignores."docs/*" = [ "I" ]
lint.per-file-ignores."tests/*" = [ "D" ]
lint.pydocstyle.convention = "numpy"

[tool.pytest.ini_options]
testpaths = [ "tests" ]
xfail_strict = true
addopts = [
  "--import-mode=importlib", # allow using test files with same name
]

[tool.coverage.run]
source = [ "scverse_tutorials" ]
patch = [ "subprocess" ]
omit = [
  "**/test_*.py",
]

[tool.cruft]
skip = [
  "tests",
  "src/**/__init__.py",
  "src/**/basic.py",
  "docs/api.md",
  "docs/changelog.md",
  "docs/references.bib",
  "docs/references.md",
  "docs/notebooks/example.ipynb",
]
